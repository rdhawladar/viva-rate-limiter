name: Deploy to EKS

on:
  push:
    branches: 
      - dev
      - stage
      - main
    tags:
      - 'v*'

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: viva-rate-limiter

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      cluster_name: ${{ steps.set-env.outputs.cluster_name }}
    steps:
      - id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "cluster_name=viva-cluster-dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/stage" ]]; then
            echo "environment=stage" >> $GITHUB_OUTPUT
            echo "cluster_name=viva-cluster-stage" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "cluster_name=viva-cluster-prod" >> $GITHUB_OUTPUT
          fi

  build-and-deploy:
    needs: set-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run tests
      run: |
        go test ./...
        go vet ./...

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ needs.set-environment.outputs.cluster_name }}

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        ENVIRONMENT: ${{ needs.set-environment.outputs.environment }}
      run: |
        # Apply environment-specific configuration
        kubectl apply -f k8s/base/
        kubectl apply -f k8s/environments/$ENVIRONMENT/
        
        # Update image in deployment
        kubectl set image deployment/viva-api viva-api=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -n $ENVIRONMENT
        
        # Wait for rollout to complete
        kubectl rollout status deployment/viva-api -n $ENVIRONMENT